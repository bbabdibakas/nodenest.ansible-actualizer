---
- name: Actualize ABS
  hosts: webservers
  gather_facts: false
  vars:
    config_path: "/var/www/abs/config.js" # ABS config file
    log_dir: "./logs"
    unreachable_log_path: "{{ log_dir }}/unreachable.log"

  pre_tasks:
    - name: Check if host available for connection
      ping:
      register: ping_result
      ignore_unreachable: yes
      ignore_errors: yes

    - name: Remove unreachable hosts out of execution
      meta: end_host
      when: ping_result.unreachable is defined and ping_result.unreachable

  tasks:
    - name: Ensure that {{ config_path }} exist
      stat:
        path: "{{ config_path }}"
      register: config_file

    - name: Read {{ config_path }}
      slurp:
        src: "{{ config_path }}"
      when: config_file.stat.exists
      register: file_content

    - name: Extract dialog360 block from {{ config_path }}
      set_fact:
        dialog_block: "{{ (decoded_content | regex_search('dialog360:\\s\\{[^\\}]*\\}', '\\0')) }}"
      when: config_file.stat.exists
      vars:
        decoded_content: "{{ file_content.content | b64decode }}"

    - name: Extract api and phone from dialog360 block
      set_fact:
        dialog_api_key: "{{ dialog_block | regex_search(\"api_key:\\s'([^']+)'\", '\\1') }}"
      when: dialog_block is defined

    - name: Make request to dialog360 health_status endpoint
      uri:
        url: "https://waba-v2.360dialog.io/health_status"
        method: GET
        status_code: 200,201,202,203,204,403
        headers:
          D360-API-KEY: "{{ dialog_api_key[0] }}"
          Content-Type: application/json
        return_content: yes
      register: health_response
      when: dialog_api_key is defined and dialog_api_key | length > 0

    - name: Print dialog360 health status
      debug:
        msg: "{{ health_response.content }}"
      when: health_response is defined


